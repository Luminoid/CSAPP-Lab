# 李纯厚 14302010006

# Execution begins at address 0
    .pos 0
init:
    irmovq Stack, %rsp # Set up stack pointer
    call Main # Execute main program
    halt # Terminate program

.align 8
# Source block
src:
    .quad 0x00a
    .quad 0x0b0
    .quad 0xc00
# Destination block
dest:
    .quad 0x111
    .quad 0x222
    .quad 0x333

Main:
    irmovq src, %rdi # The first parameter
    irmovq dest, %rsi # The second parameter
    irmovq $0x3, %rdx # The third parameter(length)
    irmovq $0x1, %rcx # The fourth parameter
    irmovq $0x8, %r8 # The fifth parameter
    call Copy
    ret

Copy:
    xorq %rax, %rax # result = 0 (return value)

Loop:
    mrmovq (%rdi), %r9 # val = *src
    addq %r8, %rdi # src++
    rmmovq %r9, (%rsi) # *dest = val
    addq %r8, %rsi # dest++
    xorq %r9, %rax #result ^= val
    subq %rcx, %rdx # len--
    jne Loop # len>0

End:
    ret

# The stack starts here and grows to lower address
    .pos 0x100
Stack:



